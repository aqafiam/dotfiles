return {
  'hrsh7th/nvim-insx',
  event = { 'InsertEnter' },
  config = function()
    require('insx.preset.standard').setup()

    local insx = require('insx')
    local esc = insx.helper.regex.esc

    insx.clear()

    insx.add(
      "'",
      insx.with(require('insx.recipe.auto_pair')({
        open = "'",
        close = "'"
      }), {
        insx.with.in_string(false),
        insx.with.in_comment(false),
        insx.with.nomatch([[\\\%#]]),
        insx.with.nomatch([[\a\%#]])
      })
    )
    insx.add('<CR>', require('insx.recipe.fast_break')({
      open_pat = esc('('),
      close_pat = esc(')'),
      arguments = true,
      html_attrs = true,
    }))
    insx.add('<C-]>', require('insx.recipe.fast_wrap')({
      close = ')'
    }))
    insx.add('<Space>', require('insx.recipe.pair_spacing').increase({
      open_pat = esc('('),
      close_pat = esc(')')
    }))
    -- insx.add('<BS>', require('insx.recipe.pair_spacing').decrease({
    --   open_pat = esc('('),
    --   close_pat = esc(')')
    -- }))
    insx.add('(', require('insx.recipe.auto_pair')({
      open = '(',
      close = ')'
    }))
    insx.add('(', require('insx.recipe.auto_pair').strings({
      open = [[']],
      close = [[']],
    }))
    insx.add('<BS>', require('insx.recipe.auto_pair')({
      open_pat = esc('('),
      close_pat = esc(')')
    }))
    insx.add('<BS>', require('insx.recipe.auto_pair').strings({
      open_pat = esc([[']]),
      close_pat = esc([[']])
    })) -- preset for strings.
    insx.add(')', require('insx.recipe.jump_next')({
      jump_pat = {
        [[\%#]] .. esc(')') .. [[\zs]]
      }
    }))
  end
}
